class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummyHead = new ListNode(0);  // Dummy node to simplify result list creation
        ListNode* current = dummyHead;          // Pointer to the current node in result list
        int carry = 0;                          // Carry for sum greater than or equal to 10
        
        // Traverse both lists until both are null and there is no carry left
        while (l1 != nullptr || l2 != nullptr || carry != 0) {
            int sum = carry;  // Start with the carry from the previous iteration
            
            // Add the value from l1 if it exists
            if (l1 != nullptr) {
                sum += l1->val;
                l1 = l1->next;  // Move to the next node in l1
            }
            
            // Add the value from l2 if it exists
            if (l2 != nullptr) {
                sum += l2->val;
                l2 = l2->next;  // Move to the next node in l2
            }
            
            carry = sum / 10;  // Update carry for the next iteration
            current->next = new ListNode(sum % 10);  // Create a new node with the sum's last digit
            current = current->next;  // Move current pointer to the new node
        }
        
        return dummyHead->next;  // Return the result list starting from the node next to the dummy node
    }
};
